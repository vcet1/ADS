

    import pandas as pd
    import numpy as np
    from sklearn.impute import SimpleImputer
    from sklearn.preprocessing import StandardScaler
    from sklearn.preprocessing import OneHotEncoder
    from sklearn.compose import ColumnTransformer

    df = pd.read_csv('CountryAgeSalary.csv')

    df.head(10)

       Country   Age   Salary Purchased
    0   France  44.0  72000.0        No
    1    Spain  27.0  48000.0       Yes
    2  Germany  30.0  54000.0        No
    3    Spain  38.0  61000.0        No
    4  Germany  40.0      NaN       Yes
    5   France  35.0  58000.0       Yes
    6    Spain   NaN  52000.0        No
    7   France  48.0  79000.0       Yes
    8  Germany  50.0  83000.0        No
    9   France  37.0  67000.0       Yes

    df.shape

    (10, 4)

    #Missing Values Count
    df.isnull().sum()

    Country      0
    Age          1
    Salary       1
    Purchased    0
    dtype: int64

    df.info()

    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 10 entries, 0 to 9
    Data columns (total 4 columns):
     #   Column     Non-Null Count  Dtype  
    ---  ------     --------------  -----  
     0   Country    10 non-null     object 
     1   Age        9 non-null      float64
     2   Salary     9 non-null      float64
     3   Purchased  10 non-null     object 
    dtypes: float64(2), object(2)
    memory usage: 452.0+ bytes

#Handling Missing Values

    transformer = ColumnTransformer(transformers=[
        ('tnf1',SimpleImputer(missing_values=np.nan, strategy='mean'),['Age','Salary']),
        ('tnf2',OneHotEncoder(sparse_output=False,drop='first'),['Country','Purchased'])
    ],remainder='passthrough')

    transform_data = transformer.fit_transform(df)
    column_list = ['Age','Salary','Germany','Spain','Purchased']
    dataset = pd.DataFrame(transform_data,columns=column_list)

    dataset.head(10)

             Age        Salary  Germany  Spain  Purchased
    0  44.000000  72000.000000      0.0    0.0        0.0
    1  27.000000  48000.000000      0.0    1.0        1.0
    2  30.000000  54000.000000      1.0    0.0        0.0
    3  38.000000  61000.000000      0.0    1.0        0.0
    4  40.000000  63777.777778      1.0    0.0        1.0
    5  35.000000  58000.000000      0.0    0.0        1.0
    6  38.777778  52000.000000      0.0    1.0        0.0
    7  48.000000  79000.000000      0.0    0.0        1.0
    8  50.000000  83000.000000      1.0    0.0        0.0
    9  37.000000  67000.000000      0.0    0.0        1.0
